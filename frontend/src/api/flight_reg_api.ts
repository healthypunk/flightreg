/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["createUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reservations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUserReservations"];
        put?: never;
        post: operations["reserveSeats"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/flights": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getFlights"];
        put?: never;
        post: operations["saveFlight"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/seats/suggestions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["recommendSeats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reservations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteReservation"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        User: {
            /** Format: int32 */
            id?: number;
            username?: string;
            password?: string;
            email?: string;
        };
        Flight: {
            /** Format: int32 */
            id?: number;
            destination?: string;
            departurePoint?: string;
            airLine?: string;
            /** Format: date */
            departure?: string;
            /** Format: date */
            arrival?: string;
            departureTime?: components["schemas"]["LocalTime"];
            arrivalTime?: components["schemas"]["LocalTime"];
            /** Format: double */
            price?: number;
            /** Format: int32 */
            availableSeats?: number;
        };
        LocalTime: {
            /** Format: int32 */
            hour?: number;
            /** Format: int32 */
            minute?: number;
            /** Format: int32 */
            second?: number;
            /** Format: int32 */
            nano?: number;
        };
        Reservation: {
            /** Format: int32 */
            id?: number;
            user?: components["schemas"]["User"];
            flight?: components["schemas"]["Flight"];
            seats?: components["schemas"]["Seat"][];
        };
        Seat: {
            /** Format: int32 */
            id?: number;
            flight?: components["schemas"]["Flight"];
            /** Format: int32 */
            seatNumber?: number;
            seatLetter?: string;
            /** @enum {string} */
            seatType?: SeatSeatType;
            occupied?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    createUser: {
        parameters: {
            query: {
                username: string;
                email: string;
                password: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["User"];
                };
            };
        };
    };
    getUserReservations: {
        parameters: {
            query: {
                userId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Reservation"][];
                };
            };
        };
    };
    reserveSeats: {
        parameters: {
            query: {
                userId: number;
                flightId: number;
                seatIds: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Reservation"];
                };
            };
        };
    };
    getFlights: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Flight"][];
                };
            };
        };
    };
    saveFlight: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Flight"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["User"][];
                };
            };
        };
    };
    recommendSeats: {
        parameters: {
            query: {
                flightId: number;
                numOfSeats: number;
                seatTypes?: PathsApiSeatsSuggestionsGetParametersQuerySeatTypes[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Seat"][];
                };
            };
        };
    };
    deleteReservation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
export enum PathsApiSeatsSuggestionsGetParametersQuerySeatTypes {
    WINDOW = "WINDOW",
    AISLE = "AISLE",
    EXTRA_LEGROOM = "EXTRA_LEGROOM",
    NEAR_EXIT = "NEAR_EXIT",
    STANDARD = "STANDARD"
}
export enum SeatSeatType {
    WINDOW = "WINDOW",
    AISLE = "AISLE",
    EXTRA_LEGROOM = "EXTRA_LEGROOM",
    NEAR_EXIT = "NEAR_EXIT",
    STANDARD = "STANDARD"
}
